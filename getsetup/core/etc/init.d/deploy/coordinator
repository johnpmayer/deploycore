#!/bin/sh
# Deployapp Script

set -x
set -u

exec 2>&1

echo "Syncing network (ToDo: this is a hack)"

ifconfig >/dev/null 2>&1
sleep 5
ifconfig >/dev/null 2>&1
sleep 2

echo "Getting mac address"

mac=`ifconfig | grep eth0 | egrep -o "([0-9a-fA-F]{2}[:]){5}[0-9a-fA-F]{2}"`
report_ip=`ifconfig | grep -A 1 eth0 | egrep -o "inet addr:(\S+)" | awk -F ':' '{print $2}' | awk -F '.' '{print $4}'`

echo "Using mac address $mac, reporting ip $report_ip"

echo "Checking host registration..."

id=`wget http://router/core/check/$mac -O -`
echo "Check registration: $id" >> /tmp/check

if [ $id = "null" ]
then
    
    echo "Host is unregistered, performing registration"
    
    register=`wget http://router/core/register/$mac -O -`
    id=`wget http://router/core/check/$mac -O -`
    wget http://router/core/report/$id/$report_ip -O -
    
    echo "Host is idle, waiting for reboot from deployapp"
    
else
    if echo $id | egrep '^[0-9]+$'
    then
        
        export etc="/tmp/deployetc"
        mkdir -p $etc
        
        echo "Host is registered, fetching setup configuration files"
        
	wget http://router/core/report/$id/$report_ip -O -
        
        # todo todo todo
        echo "ToDo: pause and wait to see if we should actually do any installation"
        deploy_stage=`wget http://router/core/isstaged/$id -O -`
        
        if [ $deploy_stage -ne 1 ]
        then
            echo "Host is not staged for install, setup exiting"
            exit
        fi
                
        # Create partitions with fdisk
        wget http://router/core/fdisk/$id -O - >$etc/fdisk
        cat $etc/fdisk
        $deploybin/fdisk $etc/fdisk
        
        export mountroot="/host/"
        
        # Format all partitions to ext2 and mount them under /host
        fstabcfg=$etc/fstab
        wget http://router/core/fstab/$id -O - >$fstabcfg
        cat $fstabcfg
        $deploybin/mount $fstabcfg
        
        # Get the archive url
        archive_url=`wget http://router/core/archive/$id -O -`
        echo "Archive URL: $archive_url"

        # Download and unpack the filesystem
        (cd $mountroot; 
            wget http://router/images/$archive_url -O - |
            zcat | cpio -i -H newc -d
        )
        
        # Update fstab
        $deploybin/fstab $fstabcfg

        # Uninstall any existing grub
        rm -rf $mountroot/boot/grub $mountroot/boot/grub2 $mountroot/etc/grub.cfg $mountroot/etc/grub2.cfg

        # Install grub2
        /usr/local/sbin/grub-install --no-floppy --root-directory=$mountroot /dev/sda
        
        rootpart=`awk -F ':' '$4 ~ /^\/$/ {print $1}' $fstabcfg`
        bootpart=`awk -F ':' '$5 ~ /1/ {print $1}' $fstabcfg`
        bootmount=`awk -F ':' '$5 ~ /1/ {print $4}' $fstabcfg`
        
        pre=""
        if [ $bootmount = '/' ]
        then
            pre="/boot"
        fi
        
        echo "Grub params: $rootpart $bootpart $bootmount $pre"
        
        # and write the new grub config file
        grubcfg=$mountroot/boot/grub/grub.cfg
        >$grubcfg
        cat >>$grubcfg <<EOF
# Begin /boot/grub/grub.cfg
set default=0
set timeout=1
insmod ext2
EOF
        echo >>$grubcfg "set root=(hd0,${bootpart})"
        echo >>$grubcfg "menuentry \"Deployapp Linux\" {"
        echo >>$grubcfg "linux ${pre}/vmlinuz-3.3.4-5.fc17.x86_64 ro root=/dev/sda${rootpart}"
        echo >>$grubcfg "initrd ${pre}/initramfs-3.3.4-5.fc17.x86_64.img"
        echo >>$grubcfg "}"
        
        # Copy the locale to prevent a missing file bug heh
        #cp $mountroot/usr/share/locale/en@quot/LC_MESSAGES/grub.mo $mountroot/boot/grub/locale/en.mo
        
        # and create the convenience link in /etc
        ln -sf $mountroot/boot/grub/grub.cfg $mountroot/etc/grub.cfg

        # Copy the repository file
        cp $deploybin/assessment.fedora-17-x86_64.repo $mountroot/etc/yum.repos.d/
        
        # Create the repo installer script
        deploypackagescript=$mountroot/etc/init.d/deploypackages
        >deploypackagesscript
        echo '#!/bin/sh' >> $deploypackagescript
        echo 'mac=`ifconfig | grep ether | egrep -o "(..:..:..:..:..:..)"`' >> $deploypackagescript
        echo 'MAC=`echo $mac | tr "[a-z]" "[A-Z]"`' >> $deploypackagescript
        echo 'host=`curl http://router/core/check/$MAC`' >> $deploypackagescript
        echo 'curl http://router/core/packages/$host | while read pkg' >> $deploypackagescript
        echo 'do' >> $deploypackagescript
        echo 'echo "Get $pkg" | tee -a /tmp/deploypackagelog' >> $deploypackagescript
        echo 'yum install -y --nogpgcheck $pkg 2>&1 | tee -a /tmp/deploypackagelog' >> $deploypackagescript
        echo 'done' >> $deploypackagescript
        chmod +x $deploypackagescript
        
        # Add to run level 3 startup directory
        (cd $mountroot/etc/rc3.d/; ln -s ../init.d/deploypackages S11deploypackages)
        
        # Machine is hot!
        new_stage=`wget http://router/core/finished/$id -O -`
        
        if [ new_stage -eq 1 ]
        then
            echo "would reboot here"
            sudo reboot
        fi
        
    else
        
        echo "Grep error: $?"
        echo "Something went wrong"
        
    fi
    
fi


